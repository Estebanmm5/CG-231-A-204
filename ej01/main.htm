<!DOCTYPE html>
<html lang="en-GB">

<head>
  <meta charset="utf-8" />
  <title>Grupo de cubos</title>
  <style>
    body {
      margin: 0;
    }
  </style>
</head>

<body>
  <script type="module">
    import * as THREE from 'https://sebastiann16.github.io/CompG/three.module.js';
    import { OrbitControls } from 'https://sebastiann16.github.io/CompG/OrbitControls.js';
    var WIDTH = window.innerWidth;
    var HEIGHT = window.innerHeight;

/*Crear la escena 
*/

    var renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(WIDTH, HEIGHT);
    renderer.setClearColor(0xDDDDDD, 1);
    document.body.appendChild(renderer.domElement);

    var scene = new THREE.Scene();
/*posicionar la cámara
*/
    var camera = new THREE.PerspectiveCamera(70, WIDTH / HEIGHT);
    camera.position.z = 20;
    camera.position.y = 5;
    scene.add(camera);
    const light = new THREE.AmbientLight(0x404040, 5);
    scene.add(light);
   
    
//Arreglo de colores para cada cubo (hexadecimal)
    const color = [0x660B0B, 0x84B342, 0xCF9232];
/*Funcion Cubo: Crea la geometria y el material del cubo 
 ENTRADAS: base: base del cubo (entero)
           altura: alto del cubo (entero)
           ancho: ancho del cubo (entero)
           col: color del material(arreglo de colores)

SALIDAS: retorna el cubo con geometria y material
*/
    function cubo(base, altura, ancho, col) {
      const geometry = new THREE.BoxGeometry(base, altura, ancho);
      const material = new THREE.MeshMatcapMaterial({ color: col });
      return new THREE.Mesh(geometry, material);
    }


    var ArCub = []; //Arreglo de cubos (vacio)
    var n = color.length;
    var lado = 1; //variable global del lado del cubo

//ciclo para trasladar los cubos
    var l= lado;
    for (var i = 0; i < n; i++) {
      ArCub[i] = cubo(l, l, l, color[i]);
      ArCub[i].position.x = l/2;
      ArCub[i].position.y = l/2;
      ArCub[i].position.z = l/2;
      l =l/2;
    }

    for (var i = 1; i < 3; i++) {
        ArCub[i].position.x = lado/2;
        ArCub[i].position.z = lado/2;
    }

    ArCub[1].position.y = 5*lado/4;
    ArCub[2].position.y = 13*lado/8;
    
//convertir los cubos en grupo
    const group = new THREE.Group();
    for (i = 0; i < n; i++) {
      group.add(ArCub[i]);
    }

//añadir el grupo a la escena
    scene.add(group);
//controlador de camara orbitcontrols
    const controls = new OrbitControls(camera, renderer.domElement);
    const axesHelper = new THREE.AxesHelper( 1000 ); //flechas del plano
    scene.add( axesHelper );

    const size = 1000;
const divisions = 1000;
//añadir la malla
const gridHelper = new THREE.GridHelper( size, divisions );
scene.add( gridHelper );


    function animate() {

      requestAnimationFrame(animate);
      controls.update();
      renderer.render(scene, camera)
    }
    animate();
  </script>
</body>

</html>